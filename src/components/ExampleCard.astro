---
import UserByline from "./UserByline.astro";
import FlexButton from "./FlexButton.astro";

interface Props {
  example: {
    id: number;
    slug: string;
    title: string;
    description: string;
    shortDescription?: string;
    tags: string[];
    sections: string[];
    author?: {
      username: string;
      imageUrl: string;
    };
    authors?: {
      username: string;
      imageUrl: string;
    }[];
    cta?: {
      text: string;
      icon?: string;
      href: string;
    };
    ctas?: {
      text: string;
      icon?: string;
      href: string;
    }[];
  };
}

const { example } = Astro.props;
---

<a
  href={`/recipe/${example.slug}`}
  class="example-card | button groq-link bg-white rounded-md shadow-sm overflow-hidden border border-gray-200 hover:shadow-lg transition-shadow duration-300 block group cursor-pointer flex flex-col h-full"
  data-tags={example.tags.join(",")}
  data-sections={example.sections.join(",")}
>
  <div class="px-3 py-3 flex flex-col h-full">
    <!-- Header -->
    <div class="mb-3">
      <div class="flex flex-wrap gap-2 mb-4">
        {
          example.tags.map((tag: string) => (
            <span class="px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded-md capitalize">
              {tag}
            </span>
          ))
        }
      </div>
      <div
        class="text-xl mt-2 mb-0 font-medium text-gray-900 leading-tight group-hover:text-groq transition-colors"
      >
        {example.title}
      </div>
    </div>

    <!-- Bottom section with author and buttons -->
    <div class="mt-auto">
      <div class="flex gap-3 items-center">
        <!-- Author with flex-grow and overflow hidden -->
        <div class="flex-grow min-w-0 overflow-hidden">
          <UserByline author={example.author} authors={example.authors} />
        </div>
        
        <!-- Action buttons - flex container for multiple CTAs -->
        {
          example.ctas && (
            <div class="flex-shrink-0 flex">
              {example.ctas.map((cta) => (
                <FlexButton
                  href={cta.href}
                  size="sm"
                  icon={cta.icon}
                  text={cta.text}
                  variant="ghost"
                />
              ))}
            </div>
          )
        }
      </div>
    </div>
  </div>
</a>
